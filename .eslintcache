[{"/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.js":"1","/Users/maxmueller/Coding/max-mueller-site/src/theme.ts":"2","/Users/maxmueller/Coding/max-mueller-site/src/index.tsx":"3","/Users/maxmueller/Coding/max-mueller-site/src/App.tsx":"4","/Users/maxmueller/Coding/max-mueller-site/src/components/Header/Header.tsx":"5","/Users/maxmueller/Coding/max-mueller-site/src/components/Body/Profile.tsx":"6","/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher/ThemeSwitcher.tsx":"7","/Users/maxmueller/Coding/max-mueller-site/src/utils/utils.ts":"8","/Users/maxmueller/Coding/max-mueller-site/src/hooks/Contexts.ts":"9","/Users/maxmueller/Coding/max-mueller-site/src/hooks/languageReducer.tsx":"10"},{"size":362,"mtime":1607412638157,"results":"11","hashOfConfig":"12"},{"size":4394,"mtime":1628481941678,"results":"13","hashOfConfig":"12"},{"size":266,"mtime":1629179206756,"results":"14","hashOfConfig":"12"},{"size":791,"mtime":1629179116669,"results":"15","hashOfConfig":"12"},{"size":770,"mtime":1629178783738,"results":"16","hashOfConfig":"12"},{"size":2450,"mtime":1629174213050,"results":"17","hashOfConfig":"12"},{"size":2981,"mtime":1629178980242,"results":"18","hashOfConfig":"12"},{"size":861,"mtime":1629176657385,"results":"19","hashOfConfig":"12"},{"size":159,"mtime":1629178494625,"results":"20","hashOfConfig":"12"},{"size":699,"mtime":1629178953696,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1miwhwb",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.js",[],["46","47"],"/Users/maxmueller/Coding/max-mueller-site/src/theme.ts",[],["48","49"],"/Users/maxmueller/Coding/max-mueller-site/src/index.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/App.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/Header/Header.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/Body/Profile.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher/ThemeSwitcher.tsx",["50"],"import React, { FC, useState, useEffect, useReducer } from 'react';\nimport { Box, Button, useColorMode, Paragraph, Image } from 'theme-ui';\nimport { Countries, Flags, ICountryToFlag, Language } from 'utils/utils';\n\n//TODO: build this dynamically\nconst countryAndFlagArray: ICountryToFlag[] = [\n  { country: Countries.ARGENTINA, flag: Flags.AR, language: Language.AR },\n  { country: Countries.BAHAMAS, flag: Flags.BS, language: Language.BS },\n  { country: Countries.CHINA, flag: Flags.CN, language: Language.CN },\n  { country: Countries.INDIA, flag: Flags.IN, language: Language.IN },\n  { country: Countries.ISRAEL, flag: Flags.IL, language: Language.IL },\n  { country: Countries.ITALY, flag: Flags.IT, language: Language.IT },\n  { country: Countries.JAMAICA, flag: Flags.JM, language: Language.JM },\n  { country: Countries.JAPAN, flag: Flags.JP, language: Language.JP },\n  { country: Countries.QATAR, flag: Flags.QA, language: Language.QA },\n  { country: Countries.SOUTHAFRICA, flag: Flags.ZA, language: Language.ZA },\n  { country: Countries.UKRAINE, flag: Flags.UA, language: Language.UA },\n  { country: Countries.US, flag: Flags.US, language: Language.US },\n  { country: Countries.CDZR, flag: Flags.CDZR, language: Language.CDZR },\n];\n\nexport const ThemeSwitcher: FC<{}> = (): JSX.Element => {\n  const [countryMode, setCountryMode] = useColorMode();\n  const [flagMode, setFlagMode] = useState('US');\n\n  useEffect(() => {\n    setCountryMode(Countries.US);\n    setFlagMode(Flags.US);\n  }, [setCountryMode]);\n\n  const updateCountryAndFlagTheme = (): void => {\n    const countryAndFlagIndex = countryAndFlagArray.findIndex(\n      (country) => country.country === countryMode\n    );\n    const nextCountryAndFlagItem =\n      countryAndFlagArray[\n        (countryAndFlagIndex + 1) % countryAndFlagArray.length\n      ];\n    setCountryMode(nextCountryAndFlagItem.country);\n    setFlagMode(nextCountryAndFlagItem.flag);\n  };\n\n  return (\n    <Box\n      sx={{\n        fontFamily: 'heading',\n        fontSize: 2,\n      }}\n    >\n      <Button\n        sx={{\n          backgroundColor: 'muted',\n          borderRadius: 0,\n          color: 'primary',\n          p: 1,\n        }}\n        onClick={(e) => {\n          updateCountryAndFlagTheme();\n        }}\n      >\n        <Box\n          sx={{\n            alignContent: 'space-around',\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Paragraph\n            sx={{\n              fontSize: 1,\n              pr: 2,\n            }}\n          >\n            {countryMode.charAt(0).toUpperCase() +\n              countryMode\n                .slice(1)\n                .split(/(?=[A-Z])/)\n                .join(' ')}\n          </Paragraph>\n          <Image\n            sx={{ maxHeight: 2 }}\n            src={`https://crwflags.com/fotw/images/${flagMode.charAt(\n              0\n            )}/${flagMode}.gif`}\n          />\n        </Box>\n      </Button>\n    </Box>\n  );\n};\n","/Users/maxmueller/Coding/max-mueller-site/src/utils/utils.ts",[],"/Users/maxmueller/Coding/max-mueller-site/src/hooks/Contexts.ts",["51"],"import React, { createContext } from 'react';\nimport { LanguageState } from './languageReducer';\n\nexport const LanguageContext = createContext(LanguageState);\n","/Users/maxmueller/Coding/max-mueller-site/src/hooks/languageReducer.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":42,"nodeType":"58","messageId":"59","endLine":1,"endColumn":52},{"ruleId":"56","severity":1,"message":"60","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]