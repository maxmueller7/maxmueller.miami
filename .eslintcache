[{"/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.js":"1","/Users/maxmueller/Coding/max-mueller-site/src/components/Header.tsx":"2","/Users/maxmueller/Coding/max-mueller-site/src/theme.ts":"3","/Users/maxmueller/Coding/max-mueller-site/src/components/Max.tsx":"4","/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher.tsx":"5","/Users/maxmueller/Coding/max-mueller-site/src/utils.ts":"6","/Users/maxmueller/Coding/max-mueller-site/src/index.tsx":"7","/Users/maxmueller/Coding/max-mueller-site/src/App.tsx":"8"},{"size":362,"mtime":1607412638157,"results":"9","hashOfConfig":"10"},{"size":855,"mtime":1628217685030,"results":"11","hashOfConfig":"10"},{"size":4485,"mtime":1628378156043,"results":"12","hashOfConfig":"10"},{"size":614,"mtime":1628377362221,"results":"13","hashOfConfig":"10"},{"size":2457,"mtime":1628377709765,"results":"14","hashOfConfig":"10"},{"size":578,"mtime":1628376090038,"results":"15","hashOfConfig":"10"},{"size":478,"mtime":1628377790346,"results":"16","hashOfConfig":"10"},{"size":557,"mtime":1628378160804,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1miwhwb",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.js",[],["37","38"],"/Users/maxmueller/Coding/max-mueller-site/src/components/Header.tsx",[],["39","40"],"/Users/maxmueller/Coding/max-mueller-site/src/theme.ts",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/Max.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher.tsx",["41"],"import React, { FC, useState, useEffect } from 'react';\nimport { Box, Button, useColorMode, Paragraph, Image } from 'theme-ui';\nimport { Countries, Flags, ICountryToFlag } from 'utils';\n\n//TODO: build this dynamically\nconst countriesToFlags: ICountryToFlag[] = [\n  { country: Countries.ARGENTINA, flag: Flags.AR },\n  { country: Countries.BAHAMAS, flag: Flags.BS },\n  { country: Countries.CHINA, flag: Flags.CN },\n  { country: Countries.INDIA, flag: Flags.IN },\n  { country: Countries.ISRAEL, flag: Flags.IL },\n  { country: Countries.ITALY, flag: Flags.IT },\n  { country: Countries.JAMAICA, flag: Flags.JM },\n  { country: Countries.JAPAN, flag: Flags.JP },\n  { country: Countries.QATAR, flag: Flags.QA },\n  { country: Countries.SOUTHAFRICA, flag: Flags.ZA },\n  { country: Countries.UGANDA, flag: Flags.UG },\n  { country: Countries.UKRAINE, flag: Flags.UA },\n  { country: Countries.USA, flag: Flags.US },\n];\n\nexport const ThemeSwitcher: FC<{}> = (): JSX.Element => {\n  const [countryMode, setCountryMode] = useColorMode();\n  const [flagMode, setFlagMode] = useState('US');\n\n  useEffect(() => {\n    setCountryMode(Countries.USA);\n    setFlagMode(Flags.US);\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        fontFamily: 'heading',\n        fontSize: 2,\n      }}\n    >\n      <Button\n        sx={{\n          width: 6,\n          height: 3,\n          color: 'primary',\n          bg: 'background',\n        }}\n        onClick={(e) => {\n          const countryToFlagIndex = countriesToFlags.findIndex(\n            (country) => country.country === countryMode\n          );\n          const nextCountryToFlag =\n            countriesToFlags[\n              (countryToFlagIndex + 1) % countriesToFlags.length\n            ];\n          setCountryMode(nextCountryToFlag.country);\n          setFlagMode(nextCountryToFlag.flag);\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flexbox',\n            alignContent: 'flex-start',\n          }}\n        >\n          <Paragraph\n            sx={{\n              fontSize: 1,\n              display: 'inline',\n            }}\n          >\n            {countryMode.charAt(0).toUpperCase() +\n              countryMode\n                .slice(1)\n                .split(/(?=[A-Z])/)\n                .join(' ')}\n          </Paragraph>\n          <Image\n            sx={{ display: 'inline' }}\n            src={`https://www.countryflags.io/${flagMode}/flat/64.png`}\n          />\n        </Box>\n      </Button>\n    </Box>\n  );\n};\n","/Users/maxmueller/Coding/max-mueller-site/src/utils.ts",[],"/Users/maxmueller/Coding/max-mueller-site/src/index.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/App.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":29,"column":6,"nodeType":"48","endLine":29,"endColumn":8,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCountryMode'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [setCountryMode]",{"range":"55","text":"56"},[1159,1161],"[setCountryMode]"]