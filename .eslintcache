[{"/Users/maxmueller/Coding/max-mueller-site/src/theme.ts":"1","/Users/maxmueller/Coding/max-mueller-site/src/index.tsx":"2","/Users/maxmueller/Coding/max-mueller-site/src/App.tsx":"3","/Users/maxmueller/Coding/max-mueller-site/src/components/Header.tsx":"4","/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher.tsx":"5","/Users/maxmueller/Coding/max-mueller-site/src/utils.ts":"6","/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.ts":"7","/Users/maxmueller/Coding/max-mueller-site/src/components/ProfileLinks.tsx":"8","/Users/maxmueller/Coding/max-mueller-site/src/components/AboutMe.tsx":"9","/Users/maxmueller/Coding/max-mueller-site/src/pages/Main.tsx":"10"},{"size":5424,"mtime":1633978612872,"results":"11","hashOfConfig":"12"},{"size":266,"mtime":1629655716687,"results":"13","hashOfConfig":"12"},{"size":535,"mtime":1633979063768,"results":"14","hashOfConfig":"12"},{"size":2012,"mtime":1633990005764,"results":"15","hashOfConfig":"12"},{"size":2275,"mtime":1633964531090,"results":"16","hashOfConfig":"12"},{"size":2038,"mtime":1633964523879,"results":"17","hashOfConfig":"12"},{"size":370,"mtime":1629655711562,"results":"18","hashOfConfig":"12"},{"size":902,"mtime":1633988775681,"results":"19","hashOfConfig":"12"},{"size":868,"mtime":1633988766980,"results":"20","hashOfConfig":"12"},{"size":358,"mtime":1633988784193,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1miwhwb",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxmueller/Coding/max-mueller-site/src/theme.ts",[],["45","46"],"/Users/maxmueller/Coding/max-mueller-site/src/index.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/App.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/Header.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/ThemeSwitcher.tsx",["47"],"import React, { FC, useState, useEffect } from 'react';\nimport { Button, useColorMode, Image, Flex } from 'theme-ui';\nimport { Countries, Flags, ICountryToFlag, MySitesLinks } from 'utils';\n\n//TODO: build this dynamically\nconst countryAndFlagArray: ICountryToFlag[] = [\n  { country: Countries.ARGENTINA, flag: Flags.AR },\n  { country: Countries.BAHAMAS, flag: Flags.BS },\n  { country: Countries.CHINA, flag: Flags.CN },\n  { country: Countries.INDIA, flag: Flags.IN },\n  { country: Countries.ISRAEL, flag: Flags.IL },\n  { country: Countries.ITALY, flag: Flags.IT },\n  { country: Countries.JAMAICA, flag: Flags.JM },\n  { country: Countries.JAPAN, flag: Flags.JP },\n  { country: Countries.QATAR, flag: Flags.QA },\n  { country: Countries.SOUTHAFRICA, flag: Flags.ZA },\n  { country: Countries.UKRAINE, flag: Flags.UA },\n  { country: Countries.USA, flag: Flags.US },\n  { country: Countries.ZAIRE, flag: Flags.CDZR },\n];\n\ninterface IThemeSwitcherProps {}\n\nexport const ThemeSwitcher: FC<IThemeSwitcherProps> = ({}): JSX.Element => {\n  const [countryMode, setCountryMode] = useColorMode();\n  const [flagMode, setFlagMode] = useState('US');\n\n  useEffect(() => {\n    setCountryMode(Countries.USA);\n    setFlagMode(Flags.US);\n  }, [setCountryMode]);\n\n  const updateCountryAndFlagTheme = (): void => {\n    const countryAndFlagIndex = countryAndFlagArray.findIndex(\n      (country) => country.country === countryMode\n    );\n    const nextCountryAndFlagItem =\n      countryAndFlagArray[\n        (countryAndFlagIndex + 1) % countryAndFlagArray.length\n      ];\n    setCountryMode(nextCountryAndFlagItem.country);\n    setFlagMode(nextCountryAndFlagItem.flag);\n  };\n\n  return (\n    <Button\n      variant={'styles.themeSwitcherButton'}\n      onClick={(e) => {\n        updateCountryAndFlagTheme();\n      }}\n    >\n      <Flex\n        sx={{\n          alignContent: 'space-around',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        {countryMode.charAt(0).toUpperCase() +\n          countryMode\n            .slice(1)\n            .split(/(?=[A-Z])/)\n            .join(' ')}\n        <Image\n          src={`${MySitesLinks.CRWFLAGS}/fotw/images/${flagMode.charAt(\n            0\n          )}/${flagMode}.gif`}\n        />\n      </Flex>\n    </Button>\n  );\n};\n",["48","49"],"/Users/maxmueller/Coding/max-mueller-site/src/utils.ts",[],"/Users/maxmueller/Coding/max-mueller-site/src/reportWebVitals.ts",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/ProfileLinks.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/components/AboutMe.tsx",[],"/Users/maxmueller/Coding/max-mueller-site/src/pages/Main.tsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":24,"column":56,"nodeType":"56","messageId":"57","endLine":24,"endColumn":58},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["60"],["61"],"no-global-assign","no-unsafe-negation"]